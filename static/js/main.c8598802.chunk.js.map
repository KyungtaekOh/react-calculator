{"version":3,"sources":["components/Panel.jsx","components/Display.jsx","components/ButtonGroup.jsx","components/Button.jsx","components/History.jsx","components/HistoryButton.jsx","components/Calculator.jsx","index.js"],"names":["Container","styled","div","_templateObject","Panel","react","this","props","children","React","Display_templateObject","Display","Display_Container","data-testid","data-display","displayValue","ButtonGroup_templateObject","ButtonGroup","handleClick","e","_this","onClickButton","target","textContent","ButtonGroup_Container","onClick","Button_templateObject","p","size","Button","_this$props","_this$props$size","color","Button_Container","data-color","History_templateObject","History","History_Container","HistoryButton_templateObject","Object","classCallCheck","_super","call","clickFomulaButton","bind","assertThisInitialized","data","firstValue","substr","length","console","log","onClickedPastData","_this2","formular","map","index","key","formula","result","HistoryButton_Container","listOfButtons","Calculator_templateObject","evalFunc","_templateObject2","string","Function","Calculator","state","_this$state$displayVa","lastChar","operatorKeys","proc","AC","setState","BS","√","includes","rawFomula","replace","Math","sqrt","innerData","unshift","÷","×","-","+","=","rawFomula2",".","0","Number","Calculator_Container","components_Panel","components_Display","components_ButtonGroup","components_Button","components_History","HistoryButton","clickedPastData","ReactDOM","render","react_default","a","createElement","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.c8598802.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 10px auto;\r\n  width: 300px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nclass Panel extends React.Component {\r\n  render() {\r\n    return (<Container>{this.props.children}</Container>);\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 5px;\r\n  [data-display] {\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    height: 60px;\r\n    line-height: 60px;\r\n    box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\r\n    text-align: left;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    padding: 0 15px;\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div data-testid=\"display\" data-display>{this.props.displayValue}</div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :after {\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n`;\r\n\r\nclass ButtonGroup extends React.Component {\r\n  handleClick = e => {\r\n    this.props.onClickButton(e.target.textContent);\r\n  };\r\n  render() {\r\n    return (\r\n      <Container onClick={this.handleClick}>{this.props.children}</Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonGroup;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  float: left;\r\n  width: ${p => (p.size / 4) * 100}%;\r\n  padding: 5px;\r\n  button {\r\n    :focus {\r\n      outline: none;\r\n    }\r\n    :hover {\r\n      background: #eee;\r\n    }\r\n    :active {\r\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n    }\r\n    color: #000;\r\n    font-size: 20px;\r\n    line-height: 40px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    background: transparent;\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n\r\n    &[data-color=\"gray\"] {\r\n      background: #eee;\r\n      :hover {\r\n        background: #ccc;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    const { size = 1, color, children } = this.props;\r\n    return (\r\n      <Container size={size}>\r\n        <button data-color={color}>{children}</button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 300px;\r\n  height: 374px;\r\n  padding: 10px;\r\n  margin: 20px auto;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n  overflow-y: scroll;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  ::-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari, Opera*/\r\n  }\r\n`;\r\n\r\n// TODO: Panel 을 참고해서 History component 생성 및 export\r\nclass History extends React.Component {\r\n  render() {//data-testid=\"history\"\r\n    return <Container data-testid=\"history\">{this.props.children}</Container>;\r\n  }\r\n}\r\n\r\nexport default History;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  float: left;\r\n  width: ${p => (p.size / 4) * 100}%;\r\n  padding: 5px;\r\n  margin: (0, 0, 0, 10px) !important\r\n  button {\r\n    :focus {\r\n      outline: none;\r\n    }\r\n    :hover {\r\n      background: #eee;\r\n    }\r\n    :active {\r\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n    }\r\n    color: #000;\r\n    font-size: 20px;\r\n    line-height: 30px;\r\n    text-align: right;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    background: transparent;\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n\r\n    &[data-color=\"gray\"] {\r\n      background: #eee;\r\n      :hover {\r\n        background: #ccc;\r\n      }\r\n    }\r\n  }\r\n`;\r\n// font-weight: bold; line-height: 60px;\r\nclass Button extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.clickFomulaButton = this.clickFomulaButton.bind(this);\r\n  }\r\n\r\n  clickFomulaButton(data) {\r\n    let firstValue = data.substr(0, 1);\r\n    if(firstValue == \"√\"){\r\n      firstValue = data.substr(2, data.length - 3);\r\n    }else{\r\n      firstValue = data\r\n    }\r\n\r\n    console.log(firstValue);\r\n    this.props.onClickedPastData(firstValue);\r\n  }\r\n\r\n\r\n  listOfButtons(){\r\n    let listOfData = this.props.formular;\r\n    let index;\r\n    return listOfData.map((data, index) => {\r\n      return <button \r\n      key={index}\r\n      onClick={() => this.clickFomulaButton(data.formula)}\r\n      >\r\n        {data.formula}\r\n        <br/>\r\n        {\"=\" + data.result}\r\n      </button>\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { size = 4, color, children } = this.props;\r\n    return (\r\n      <Container size={size}>\r\n        {this.listOfButtons()}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Panel from \"./Panel\";\r\nimport Display from \"./Display\";\r\nimport ButtonGroup from \"./ButtonGroup\";\r\nimport Button from \"./Button\";\r\nimport History from \"./History\";\r\nimport HistoryButton from \"./HistoryButton\";\r\n\r\nconst Container = styled.div`\r\n  margin: 30px auto;\r\n  text-align: center;\r\n`;\r\n\r\n// TODO: History 내에서 수식 표시할 때 사용\r\nconst Box = styled.div`\r\n  display: inline-block;\r\n  width: 270px;\r\n  height: 65px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: right;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  h3 {\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst evalFunc = function(string) {\r\n  // eslint-disable-next-line no-new-func\r\n  return new Function(\"return (\" + string + \")\")();\r\n};\r\n\r\nclass Calculator extends React.Component {\r\n  // TODO: history 추가\r\n  state = {\r\n    displayValue: \"\",\r\n    formular: []\r\n  };\r\n\r\n  onClickButton = key => {\r\n    let { displayValue = \"\" } = this.state;\r\n    displayValue = \"\" + displayValue;\r\n    const lastChar = displayValue.substr(displayValue.length - 1);\r\n    const operatorKeys = [\"÷\", \"×\", \"-\", \"+\"];\r\n    const proc = {\r\n      AC: () => {\r\n        this.setState({ displayValue: \"\" });\r\n      },\r\n      BS: () => {\r\n        if (displayValue.length > 0) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n          this.setState({ displayValue: displayValue});\r\n        }\r\n      },\r\n      // TODO: 제곱근 구현\r\n      \"√\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          const rawFomula = \"√(\" + displayValue + \")\";\r\n          displayValue = displayValue.replace(/×/gi, \"*\");\r\n          displayValue = displayValue.replace(/÷/gi, \"/\");\r\n          let result = Math.sqrt(evalFunc(displayValue));\r\n          const innerData = {formula: rawFomula, result: result};\r\n          // this.state.formular.push(innerData);\r\n          this.state.formular.unshift(innerData);\r\n          // formular\r\n          this.setState({ displayValue: result});\r\n        }\r\n      },\r\n      // TODO: 사칙연산 구현\r\n      \"÷\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"÷\" });\r\n        }\r\n      },\r\n      \"×\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"×\" });\r\n        }\r\n      },\r\n      \"-\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"-\" });\r\n        }\r\n      },\r\n      \"+\": () => {\r\n        // + 연산 참고하여 연산 구현\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"+\" });\r\n        }\r\n      },\r\n      \"=\": () => {\r\n        if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n        } else if (lastChar !== \"\") {\r\n          const rawFomula2 = \"\" + displayValue;\r\n          displayValue = displayValue.replace(/×/gi, \"*\");\r\n          displayValue = displayValue.replace(/÷/gi, \"/\");\r\n          displayValue = evalFunc(displayValue);\r\n          const innerData = {formula: rawFomula2, result: displayValue};\r\n          // this.state.formular.push(innerData);\r\n          this.state.formular.unshift(innerData);\r\n        }\r\n        this.setState({ displayValue });\r\n      },\r\n      \".\": () => {},\r\n      \"0\": () => {\r\n        if (Number(displayValue) !== 0) {\r\n          displayValue += \"0\";\r\n          this.setState({ displayValue });\r\n        }\r\n      }\r\n    };\r\n\r\n    if (proc[key]) {\r\n      proc[key]();\r\n    } else {\r\n      // 여긴 숫자\r\n      this.setState({ displayValue: displayValue + key });\r\n    }\r\n  };\r\n\r\n  clickedPastData(data){\r\n    this.setState({\r\n      displayValue: data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Panel>\r\n          <Display displayValue={this.state.displayValue} />\r\n          <ButtonGroup onClickButton={this.onClickButton}>\r\n            <Button size={1} color=\"gray\">\r\n              AC\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              BS\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              √\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              ÷\r\n            </Button>\r\n\r\n            <Button size={1}>7</Button>\r\n            <Button size={1}>8</Button>\r\n            <Button size={1}>9</Button>\r\n            <Button size={1} color=\"gray\">\r\n              ×\r\n            </Button>\r\n\r\n            <Button size={1}>4</Button>\r\n            <Button size={1}>5</Button>\r\n            <Button size={1}>6</Button>\r\n            <Button size={1} color=\"gray\">\r\n              -\r\n            </Button>\r\n\r\n            <Button size={1}>1</Button>\r\n            <Button size={1}>2</Button>\r\n            <Button size={1}>3</Button>\r\n            <Button size={1} color=\"gray\">\r\n              +\r\n            </Button>\r\n\r\n            <Button size={2}>0</Button>\r\n            <Button size={1}>.</Button>\r\n            <Button size={1} color=\"gray\">\r\n              =\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Panel>\r\n        {/* TODO: History componet를 이용해 map 함수와 Box styled div를 이용해 history 표시 */}\r\n        <History>\r\n            <HistoryButton\r\n            formular={this.state.formular}\r\n            onClickedPastData = {data => this.clickedPastData(data)}\r\n            ></HistoryButton>\r\n        </History>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport Calculator from \"./components/Calculator\";\r\n\r\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}